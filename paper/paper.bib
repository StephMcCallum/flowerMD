
@article{hayashi_radonpy_2022,
	title = {{RadonPy}: automated physical property calculation using all-atom classical molecular dynamics simulations for polymer informatics},
	volume = {8},
	issn = {2057-3960},
	url = {https://www.nature.com/articles/s41524-022-00906-4},
	doi = {10.1038/s41524-022-00906-4},
	shorttitle = {{RadonPy}},
	abstract = {Abstract

              The spread of data-driven materials research has increased the need for systematically designed materials property databases. However, the development of polymer databases has lagged far behind other material systems. We present {RadonPy}, an open-source library that can automate the complete process of all-atom classical molecular dynamics ({MD}) simulations applicable to a wide variety of polymeric materials. Herein, 15 different properties were calculated for more than 1000 amorphous polymers. The {MD}-calculated properties were systematically compared with experimental data to validate the calculation conditions; the bias and variance in the {MD}-calculated properties were successfully calibrated by a machine learning technique. During the high-throughput data production, we identified eight amorphous polymers with extremely high thermal conductivity ({\textgreater}0.4 W ∙ m
              –1
               ∙ K
              –1
              ) and their underlying mechanisms. Similar to the advancement of materials informatics since the advent of computational property databases for inorganic crystals, database construction using {RadonPy} will promote the development of polymer informatics.},
	pages = {222},
	number = {1},
	journaltitle = {npj Computational Materials},
	shortjournal = {npj Comput Mater},
	author = {Hayashi, Yoshihiro and Shiomi, Junichiro and Morikawa, Junko and Yoshida, Ryo},
	urldate = {2023-09-26},
	date = {2022-11-08},
	langid = {english},
	file = {Hayashi et al. - 2022 - RadonPy automated physical property calculation u.pdf:/home/marjan/Zotero/storage/CV4ZA7SU/Hayashi et al. - 2022 - RadonPy automated physical property calculation u.pdf:application/pdf},
}

@article{thompson_towards_2020,
	title = {Towards molecular simulations that are transparent, reproducible, usable by others, and extensible ({TRUE})},
	volume = {118},
	issn = {0026-8976, 1362-3028},
	url = {https://www.tandfonline.com/doi/full/10.1080/00268976.2020.1742938},
	doi = {10.1080/00268976.2020.1742938},
	abstract = {Systems composed of soft matter (e.g., liquids, polymers, foams, gels, colloids, and most biological materials) are ubiquitous in science and engineering, but molecular simulations of such systems pose particular computational challenges, requiring time and/or ensemble-averaged data to be collected over long simulation trajectories for property evaluation. Performing a molecular simulation of a soft matter system involves multiple steps, which have traditionally been performed by researchers in a “bespoke” fashion, resulting in many published soft matter simulations not being reproducible based on the information provided in the publications. To address the issue of reproducibility and to provide tools for computational screening, we have been developing the open-source Molecular Simulation and Design Framework ({MoSDeF}) software suite.},
	pages = {e1742938},
	number = {9},
	journaltitle = {Molecular Physics},
	shortjournal = {Molecular Physics},
	author = {Thompson, Matthew W. and Gilmer, Justin B. and Matsumoto, Ray A. and Quach, Co D. and Shamaprasad, Parashara and Yang, Alexander H. and Iacovella, Christopher R. and {McCabe}, Clare and Cummings, Peter T.},
	urldate = {2023-09-27},
	date = {2020-06-01},
	langid = {english},
	file = {Thompson et al. - 2020 - Towards molecular simulations that are transparent.pdf:/home/marjan/Zotero/storage/2R32UBC3/Thompson et al. - 2020 - Towards molecular simulations that are transparent.pdf:application/pdf},
}

@article{hedges_biosimspace_2019,
	title = {{BioSimSpace}: An interoperable Python framework for biomolecular simulation},
	volume = {4},
	issn = {2475-9066},
	url = {https://joss.theoj.org/papers/10.21105/joss.01831},
	doi = {10.21105/joss.01831},
	shorttitle = {{BioSimSpace}},
	abstract = {Biomolecular simulation is a diverse and growing area of research, making important contributions to structural biology and pharmaceutical research (Huggins et al., 2019). Within the community there are a several significant and widely used software packages that have evolved from within various research groups over the past 20 or more years. For example, the molecular dynamics packages {AMBER} (Case et al., 2005), {GROMACS} (Abraham et al., 2015), and {NAMD} (Phillips et al., 2005), which are all capable of running biomolecular simulations for systems consisting of hundreds of thousands of atoms and can be run on hardware ranging from laptops, to graphics processing units ({GPUs}), to the latest high-performance computing clusters. Since different software packages were developed independently, interoperability between them is poor. In large part this is the result of major differences in the supported file formats, which makes it difficult to translate the inputs and outputs of one program to another. As a consequence, expertise in one package doesn’t immediately apply to another, making it hard to share methodology and knowledge between different research communities, as evidenced, for instance, by a recent study on reproducibility of relative hydration free energies across simulation packages (Loeffler et al., 2018). The issue is compounded by the increasing use of biomolecular simulations as components of larger scientific workflows for bioengineering or computer-aided drug design purposes. A lack of interoperability leads to brittle workflows, poor reproducibility, and lock in to specific software that hinders dissemination of biomolecular simulation methodologies to other communities.},
	pages = {1831},
	number = {43},
	journaltitle = {Journal of Open Source Software},
	shortjournal = {{JOSS}},
	author = {Hedges, Lester and Mey, Antonia and Laughton, Charles and Gervasio, Francesco and Mulholland, Adrian and Woods, Christopher and Michel, Julien},
	urldate = {2023-09-27},
	date = {2019-11-22},
	langid = {english},
	file = {Hedges et al. - 2019 - BioSimSpace An interoperable Python framework for.pdf:/home/marjan/Zotero/storage/V89VIW2E/Hedges et al. - 2019 - BioSimSpace An interoperable Python framework for.pdf:application/pdf},
}

@article{shirts_statistically_2008,
	title = {Statistically optimal analysis of samples from multiple equilibrium states},
	volume = {129},
	issn = {0021-9606, 1089-7690},
	url = {https://pubs.aip.org/jcp/article/129/12/124105/957527/Statistically-optimal-analysis-of-samples-from},
	doi = {10.1063/1.2978177},
	abstract = {We present a new estimator for computing free energy differences and thermodynamic expectations as well as their uncertainties from samples obtained from multiple equilibrium states via either simulation or experiment. The estimator, which we call the multistate Bennett acceptance ratio estimator ({MBAR}) because it reduces to the Bennett acceptance ratio estimator ({BAR}) when only two states are considered, has significant advantages over multiple histogram reweighting methods for combining data from multiple states. It does not require the sampled energy range to be discretized to produce histograms, eliminating bias due to energy binning and significantly reducing the time complexity of computing a solution to the estimating equations in many cases. Additionally, an estimate of the statistical uncertainty is provided for all estimated quantities. In the large sample limit, {MBAR} is unbiased and has the lowest variance of any known estimator for making use of equilibrium data collected from multiple states. We illustrate this method by producing a highly precise estimate of the potential of mean force for a {DNA} hairpin system, combining data from multiple optical tweezer measurements under constant force bias.},
	pages = {124105},
	number = {12},
	journaltitle = {The Journal of Chemical Physics},
	author = {Shirts, Michael R. and Chodera, John D.},
	urldate = {2023-10-02},
	date = {2008-09-28},
	langid = {english},
	file = {Shirts and Chodera - 2008 - Statistically optimal analysis of samples from mul.pdf:/home/marjan/Zotero/storage/8W27U635/Shirts and Chodera - 2008 - Statistically optimal analysis of samples from mul.pdf:application/pdf},
}

@article{chodera_use_2007,
	title = {Use of the Weighted Histogram Analysis Method for the Analysis of Simulated and Parallel Tempering Simulations},
	volume = {3},
	issn = {1549-9618, 1549-9626},
	url = {https://pubs.acs.org/doi/10.1021/ct0502864},
	doi = {10.1021/ct0502864},
	abstract = {The growing adoption of generalized-ensemble algorithms for biomolecular simulation has resulted in a resurgence in the use of the weighted histogram analysis method ({WHAM}) to make use of all data generated by these simulations. Unfortunately, the original presentation of {WHAM} by Kumar et al. is not directly applicable to data generated by these methods. {WHAM} was originally formulated to combine data from independent samplings of the canonical ensemble, whereas many generalized-ensemble algorithms sample from mixtures of canonical ensembles at different temperatures. Sorting configurations generated from a parallel tempering simulation by temperature obscures the temporal correlation in the data and results in an improper treatment of the statistical uncertainties used in constructing the estimate of the density of states. Here we present variants of {WHAM}, {STWHAM} and {PTWHAM}, derived with the same set of assumptions, that can be directly applied to several generalized ensemble algorithms, including simulated tempering, parallel tempering (better known as replica-exchange among temperatures), and replica-exchange simulated tempering. We present methods that explicitly capture the considerable temporal correlation in sequentially generated configurations using autocorrelation analysis. This allows estimation of the statistical uncertainty in {WHAM} estimates of expectations for the canonical ensemble. We test the method with a one-dimensional model system and then apply it to the estimation of potentials of mean force from parallel tempering simulations of the alanine dipeptide in both implicit and explicit solvent.},
	pages = {26--41},
	number = {1},
	journaltitle = {Journal of Chemical Theory and Computation},
	shortjournal = {J. Chem. Theory Comput.},
	author = {Chodera, John D. and Swope, William C. and Pitera, Jed W. and Seok, Chaok and Dill, Ken A.},
	urldate = {2023-10-02},
	date = {2007-01-01},
	langid = {english},
	file = {Chodera et al. - 2007 - Use of the Weighted Histogram Analysis Method for .pdf:/home/marjan/Zotero/storage/L38UQDMW/Chodera et al. - 2007 - Use of the Weighted Histogram Analysis Method for .pdf:application/pdf},
}

@misc{anderson_hoomd-blue_2019,
	title = {{HOOMD}-blue: A Python package for high-performance molecular dynamics and hard particle Monte Carlo simulations},
	url = {http://arxiv.org/abs/1308.5587},
	shorttitle = {{HOOMD}-blue},
	abstract = {{HOOMD}-blue is a particle simulation engine designed for nano- and colloidal-scale molecular dynamics and hard particle Monte Carlo simulations. It has been actively developed since March 2007 and available open source since August 2008. {HOOMD}-blue is a Python package with a high performance C++/{CUDA} backend that we built from the ground up for {GPU} acceleration. The Python interface allows users to combine {HOOMD}-blue with with other packages in the Python ecosystem to create simulation and analysis workﬂows. We employ software engineering practices to develop, test, maintain, and expand the code.},
	number = {{arXiv}:1308.5587},
	publisher = {{arXiv}},
	author = {Anderson, Joshua A. and Glaser, Jens and Glotzer, Sharon C.},
	urldate = {2023-10-03},
	date = {2019-10-18},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {1308.5587 [physics]},
	keywords = {Physics - Computational Physics},
	file = {Anderson et al. - 2019 - HOOMD-blue A Python package for high-performance .pdf:/home/marjan/Zotero/storage/C6IKKZYP/Anderson et al. - 2019 - HOOMD-blue A Python package for high-performance .pdf:application/pdf},
}

@article{grunewald_polyply_2022,
	title = {Polyply; a python suite for facilitating simulations of macromolecules and nanomaterials},
	volume = {13},
	issn = {2041-1723},
	url = {https://www.nature.com/articles/s41467-021-27627-4},
	doi = {10.1038/s41467-021-27627-4},
	abstract = {Abstract
            Molecular dynamics simulations play an increasingly important role in the rational design of (nano)-materials and in the study of biomacromolecules. However, generating input files and realistic starting coordinates for these simulations is a major bottleneck, especially for high throughput protocols and for complex multi-component systems. To eliminate this bottleneck, we present the polyply software suite that provides 1) a multi-scale graph matching algorithm designed to generate parameters quickly and for arbitrarily complex polymeric topologies, and 2) a generic multi-scale random walk protocol capable of setting up complex systems efficiently and independent of the target force-field or model resolution. We benchmark quality and performance of the approach by creating realistic coordinates for polymer melt simulations, single-stranded as well as circular single-stranded {DNA}. We further demonstrate the power of our approach by setting up a microphase-separated block copolymer system, and by generating a liquid-liquid phase separated system inside a lipid vesicle.},
	pages = {68},
	number = {1},
	journaltitle = {Nature Communications},
	shortjournal = {Nat Commun},
	author = {Grünewald, Fabian and Alessandri, Riccardo and Kroon, Peter C. and Monticelli, Luca and Souza, Paulo C. T. and Marrink, Siewert J.},
	urldate = {2023-10-03},
	date = {2022-01-10},
	langid = {english},
	file = {Grünewald et al. - 2022 - Polyply\; a python suite for facilitating simulatio.pdf:/home/marjan/Zotero/storage/BDEA9LQX/Grünewald et al. - 2022 - Polyply\; a python suite for facilitating simulatio.pdf:application/pdf},
}

@article{pronk_gromacs_2013,
	title = {{GROMACS} 4.5: a high-throughput and highly parallel open source molecular simulation toolkit},
	volume = {29},
	issn = {1367-4811, 1367-4803},
	url = {https://academic.oup.com/bioinformatics/article/29/7/845/253065},
	doi = {10.1093/bioinformatics/btt055},
	shorttitle = {{GROMACS} 4.5},
	abstract = {Motivation: Molecular simulation has historically been a lowthroughput technique, but faster computers and increasing amounts of genomic and structural data are changing this by enabling large-scale automated simulation of, for instance, many conformers or mutants of biomolecules with or without a range of ligands. At the same time, advances in performance and scaling now make it possible to model complex biomolecular interaction and function in a manner directly testable by experiment. These applications share a need for fast and efficient software that can be deployed on massive scale in clusters, web servers, distributed computing or cloud resources.},
	pages = {845--854},
	number = {7},
	journaltitle = {Bioinformatics},
	author = {Pronk, Sander and Páll, Szilárd and Schulz, Roland and Larsson, Per and Bjelkmar, Pär and Apostolov, Rossen and Shirts, Michael R. and Smith, Jeremy C. and Kasson, Peter M. and Van Der Spoel, David and Hess, Berk and Lindahl, Erik},
	urldate = {2023-10-03},
	date = {2013-04-01},
	langid = {english},
	file = {Pronk et al. - 2013 - GROMACS 4.5 a high-throughput and highly parallel.pdf:/home/marjan/Zotero/storage/P3G6GWA3/Pronk et al. - 2013 - GROMACS 4.5 a high-throughput and highly parallel.pdf:application/pdf},
}

@article{hess_gromacs_2008,
	title = {{GROMACS} 4: Algorithms for Highly Efficient, Load-Balanced, and Scalable Molecular Simulation},
	volume = {4},
	issn = {1549-9618, 1549-9626},
	url = {https://pubs.acs.org/doi/10.1021/ct700301q},
	doi = {10.1021/ct700301q},
	shorttitle = {{GROMACS} 4},
	abstract = {Molecular simulation is an extremely useful, but computationally very expensive tool for studies of chemical and biomolecular systems. Here, we present a new implementation of our molecular simulation toolkit {GROMACS} which now both achieves extremely high performance on single processors from algorithmic optimizations and hand-coded routines and simultaneously scales very well on parallel machines. The code encompasses a minimal-communication domain decomposition algorithm, full dynamic load balancing, a state-of-the-art parallel constraint solver, and efficient virtual site algorithms that allow removal of hydrogen atom degrees of freedom to enable integration time steps up to 5 fs for atomistic simulations also in parallel. To improve the scaling properties of the common particle mesh Ewald electrostatics algorithms, we have in addition used a Multiple-Program, Multiple-Data approach, with separate node domains responsible for direct and reciprocal space interactions. Not only does this combination of algorithms enable extremely long simulations of large systems but also it provides that simulation performance on quite modest numbers of standard cluster nodes.},
	pages = {435--447},
	number = {3},
	journaltitle = {Journal of Chemical Theory and Computation},
	shortjournal = {J. Chem. Theory Comput.},
	author = {Hess, Berk and Kutzner, Carsten and Van Der Spoel, David and Lindahl, Erik},
	urldate = {2023-10-03},
	date = {2008-03-01},
	langid = {english},
	file = {Hess et al. - 2008 - GROMACS 4 Algorithms for Highly Efficient, Load-B.pdf:/home/marjan/Zotero/storage/S2YWMFVZ/Hess et al. - 2008 - GROMACS 4 Algorithms for Highly Efficient, Load-B.pdf:application/pdf},
}

@article{berendsen_gromacs_1995,
	title = {{GROMACS}: A message-passing parallel molecular dynamics implementation},
	volume = {91},
	issn = {00104655},
	url = {https://linkinghub.elsevier.com/retrieve/pii/001046559500042E},
	doi = {10.1016/0010-4655(95)00042-E},
	shorttitle = {{GROMACS}},
	abstract = {A parallel message-passing implementation of a molecular dynamics ({MD}) program that is useful for bio(macro)molecules in aqueous environment is described. The software has been developed for a custom-designed 32-processor ring {GROMACS} ({GROningen} {MAchine} for Chemical Simulation) with communication to and from left and right neighbours, but can mn on any parallel system onto which a a ring of processors can be mapped and which supports {PVM}-like block send and receive calls. The {GROMACS} software consists of a preprocessor, a parallel {MD} and energy minimization p{\textasciitilde}ogram that can use an arbitrary number of processors (including one), an optional monitor, and several analysis tools. The programs are written in {ANSI} C and available by ftp (information: gromacs@chem.rug.nl). The functionality is based on the {GROMOS} ({GROningen} {MOlecular} Simulation) package (van Gunsteren and Berendsen, 1987; {BIOMOS} B.V., Nijenborgh 4, 9747 {AG} Groningen). Conversion programs between {GROMOS} and {GROMACS} formats are included.},
	pages = {43--56},
	number = {1},
	journaltitle = {Computer Physics Communications},
	shortjournal = {Computer Physics Communications},
	author = {Berendsen, H.J.C. and Van Der Spoel, D. and Van Drunen, R.},
	urldate = {2023-10-03},
	date = {1995-09},
	langid = {english},
	file = {Berendsen et al. - 1995 - GROMACS A message-passing parallel molecular dyna.pdf:/home/marjan/Zotero/storage/NQBQTWNV/Berendsen et al. - 1995 - GROMACS A message-passing parallel molecular dyna.pdf:application/pdf},
}

@article{abraham_gromacs_2015,
	title = {{GROMACS}: High performance molecular simulations through multi-level parallelism from laptops to supercomputers},
	volume = {1-2},
	issn = {23527110},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2352711015000059},
	doi = {10.1016/j.softx.2015.06.001},
	shorttitle = {{GROMACS}},
	abstract = {{GROMACS} is one of the most widely used open-source and free software codes in chemistry, used primarily for dynamical simulations of biomolecules. It provides a rich set of calculation types, preparation and analysis tools. Several advanced techniques for free-energy calculations are supported. In version 5, it reaches new performance heights, through several new and enhanced parallelization algorithms. These work on every level; {SIMD} registers inside cores, multithreading, heterogeneous {CPU}–{GPU} acceleration, state-of-the-art 3D domain decomposition, and ensemble-level parallelization through built-in replica exchange and the separate Copernicus framework. The latest best-in-class compressed trajectory storage format is supported.},
	pages = {19--25},
	journaltitle = {{SoftwareX}},
	shortjournal = {{SoftwareX}},
	author = {Abraham, Mark James and Murtola, Teemu and Schulz, Roland and Páll, Szilárd and Smith, Jeremy C. and Hess, Berk and Lindahl, Erik},
	urldate = {2023-10-03},
	date = {2015-09},
	langid = {english},
	file = {Abraham et al. - 2015 - GROMACS High performance molecular simulations th.pdf:/home/marjan/Zotero/storage/GS2XGYLP/Abraham et al. - 2015 - GROMACS High performance molecular simulations th.pdf:application/pdf},
}

@incollection{szilard_tackling_2015,
	title = {Tackling Exascale Software Challenges in Molecular Dynamics Simulations with {GROMACS}},
	volume = {8759},
	url = {http://arxiv.org/abs/1506.00716},
	abstract = {{GROMACS} is a widely used package for biomolecular simulation, and over the last two decades it has evolved from small-scale efficiency to advanced heterogeneous acceleration and multi-level parallelism targeting some of the largest supercomputers in the world. Here, we describe some of the ways we have been able to realize this through the use of parallelization on all levels, combined with a constant focus on absolute performance. Release 4.6 of {GROMACS} uses {SIMD} acceleration on a wide range of architectures, {GPU} offloading acceleration, and both {OpenMP} and {MPI} parallelism within and between nodes, respectively. The recent work on acceleration made it necessary to revisit the fundamental algorithms of molecular simulation, including the concept of neighborsearching, and we discuss the present and future challenges we see for exascale simulation - in particular a very fine-grained task parallelism. We also discuss the software management, code peer review and continuous integration testing required for a project of this complexity.},
	pages = {3--27},
	author = {Szilárd, Páll and Abraham, Mark James and Kutzner, Carsten and Hess, Berk and Lindahl, Erik},
	urldate = {2023-10-03},
	date = {2015},
	langid = {english},
	doi = {10.1007/978-3-319-15976-8_1},
	eprinttype = {arxiv},
	eprint = {1506.00716 [cs]},
	keywords = {Computer Science - Computational Engineering, Finance, and Science, I.6.8, J.2},
	file = {Szilárd et al. - 2015 - Tackling Exascale Software Challenges in Molecular.pdf:/home/marjan/Zotero/storage/2888WILV/Szilárd et al. - 2015 - Tackling Exascale Software Challenges in Molecular.pdf:application/pdf},
}

@article{santana-bonilla_modular_2023,
	title = {Modular Software for Generating and Modeling Diverse Polymer Databases},
	volume = {63},
	issn = {1549-9596, 1549-960X},
	url = {https://pubs.acs.org/doi/10.1021/acs.jcim.3c00081},
	doi = {10.1021/acs.jcim.3c00081},
	abstract = {Machine learning methods offer the opportunity to design new functional materials on an unprecedented scale; however, building the large, diverse databases of molecules on which to train such methods remains a daunting task. Automated computational chemistry modeling workflows are therefore becoming essential tools in this data-driven hunt for new materials with novel properties, since they offer a means by which to create and curate molecular databases without requiring significant levels of user input. This ensures that well-founded concerns regarding data provenance, reproducibility, and replicability are mitigated. We have developed a versatile and flexible software package, {PySoftK} (Python Soft Matter at King’s College London) that provides flexible, automated computational workflows to create, model, and curate libraries of polymers with minimal user intervention. {PySoftK} is available as an efficient, fully tested, and easily installable Python package. Key features of the software include the wide range of different polymer topologies that can be automatically generated and its fully parallelized library generation tools. It is anticipated that {PySoftK} will support the generation, modeling, and curation of large polymer libraries to support functional materials discovery in the nanotechnology and biotechnology arenas.},
	pages = {3761--3771},
	number = {12},
	journaltitle = {Journal of Chemical Information and Modeling},
	shortjournal = {J. Chem. Inf. Model.},
	author = {Santana-Bonilla, Alejandro and López-Ríos De Castro, Raquel and Sun, Peike and Ziolek, Robert M. and Lorenz, Christian D.},
	urldate = {2023-10-03},
	date = {2023-06-26},
	langid = {english},
	file = {Santana-Bonilla et al. - 2023 - Modular Software for Generating and Modeling Diver.pdf:/home/marjan/Zotero/storage/AE3GZU56/Santana-Bonilla et al. - 2023 - Modular Software for Generating and Modeling Diver.pdf:application/pdf},
}

@incollection{snurr_hierarchical_2016,
	location = {Singapore},
	title = {A Hierarchical, Component Based Approach to Screening Properties of Soft Matter},
	isbn = {978-981-10-1126-9 978-981-10-1128-3},
	url = {http://link.springer.com/10.1007/978-981-10-1128-3_5},
	pages = {79--92},
	booktitle = {Foundations of Molecular Modeling and Simulation},
	publisher = {Springer Singapore},
	author = {Klein, Christoph and Sallai, János and Jones, Trevor J. and Iacovella, Christopher R. and {McCabe}, Clare and Cummings, Peter T.},
	editor = {Snurr, Randall Q and Adjiman, Claire S. and Kofke, David A.},
	urldate = {2023-10-05},
	date = {2016},
	langid = {english},
	doi = {10.1007/978-981-10-1128-3_5},
	note = {Series Title: Molecular Modeling and Simulation},
	file = {Klein et al. - 2016 - A Hierarchical, Component Based Approach to Screen.pdf:/home/marjan/Zotero/storage/FU5HX33B/Klein et al. - 2016 - A Hierarchical, Component Based Approach to Screen.pdf:application/pdf},
}

@article{thompson_lammps_2022,
	title = {{LAMMPS} - a flexible simulation tool for particle-based materials modeling at the atomic, meso, and continuum scales},
	volume = {271},
	issn = {00104655},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465521002836},
	doi = {10.1016/j.cpc.2021.108171},
	pages = {108171},
	journaltitle = {Computer Physics Communications},
	shortjournal = {Computer Physics Communications},
	author = {Thompson, Aidan P. and Aktulga, H. Metin and Berger, Richard and Bolintineanu, Dan S. and Brown, W. Michael and Crozier, Paul S. and In 'T Veld, Pieter J. and Kohlmeyer, Axel and Moore, Stan G. and Nguyen, Trung Dac and Shan, Ray and Stevens, Mark J. and Tranchida, Julien and Trott, Christian and Plimpton, Steven J.},
	urldate = {2023-10-05},
	date = {2022-02},
	langid = {english},
	file = {Thompson et al. - 2022 - LAMMPS - a flexible simulation tool for particle-b.pdf:/home/marjan/Zotero/storage/YY2CV6SA/Thompson et al. - 2022 - LAMMPS - a flexible simulation tool for particle-b.pdf:application/pdf},
}

@software{noauthor_gmso_nodate,
	title = {{GMSO}: General Molecular Simulation Object.},
	url = {https://gmso.mosdef.org/en/stable/},
	publisher = {mosdef-hub, Vanderbilt University},
}
